{
  "name": "zander-react",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "contentful": "^4.1.2",
    "dashify": "^0.2.2",
    "normalize.css": "^6.0.0",
    "parse-domain": "^1.1.0",
    "react": "^15.5.4",
    "react-dom": "^15.5.4",
    "react-markdown": "^2.5.0",
    "react-redux": "^5.0.4",
    "react-router-dom": "^4.1.1",
    "redux": "^3.6.0",
    "redux-logger": "^3.0.1",
    "redux-promise": "^0.5.3",
    "redux-thunk": "^2.2.0"
  },
  "devDependencies": {
    "autoprefixer": "^6.7.7",
    "babel-core": "^6.24.1",
    "babel-eslint": "^7.2.1",
    "babel-jest": "^19.0.0",
    "babel-loader": "^6.4.1",
    "babel-preset-react-app": "^2.2.0",
    "babel-runtime": "^6.20.0",
    "case-sensitive-paths-webpack-plugin": "1.1.4",
    "chalk": "1.1.3",
    "connect-history-api-fallback": "1.3.0",
    "cross-spawn": "4.0.2",
    "css-loader": "0.26.2",
    "cssnano": "^3.6.2",
    "detect-port": "^1.1.1",
    "dotenv": "2.0.0",
    "enzyme": "^2.8.2",
    "enzyme-to-json": "^1.5.1",
    "eslint": "^3.19.0",
    "eslint-config-react-app": "^0.6.2",
    "eslint-loader": "^1.7.1",
    "eslint-plugin-flowtype": "^2.30.4",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-jsx-a11y": "4.0.0",
    "eslint-plugin-react": "^6.10.3",
    "extract-text-webpack-plugin": "^2.0.0",
    "file-loader": "0.10.0",
    "fs-extra": "0.30.0",
    "html-webpack-plugin": "2.24.0",
    "http-proxy-middleware": "0.17.3",
    "husky": "^0.13.3",
    "jest": "^19.0.2",
    "json-loader": "0.5.4",
    "lint-staged": "^3.4.0",
    "normalizr": "^3.2.2",
    "object-assign": "4.1.1",
    "postcss-advanced-variables": "^1.2.2",
    "postcss-compact-mq": "^0.2.1",
    "postcss-custom-properties": "^5.0.2",
    "postcss-easings": "^0.3.0",
    "postcss-easy-import": "^2.0.0",
    "postcss-loader": "^1.3.3",
    "postcss-mixins": "^5.4.1",
    "postcss-modular-scale": "^2.5.2",
    "postcss-nested": "^1.0.1",
    "postcss-nested-ancestors": "^1.0.0",
    "postcss-reporter": "^3.0.0",
    "prettier": "^1.1.0",
    "promise": "7.1.1",
    "react-addons-test-utils": "^15.5.0",
    "react-dev-utils": "^0.5.2",
    "react-test-renderer": "^15.5.3",
    "redux-devtools": "^3.3.2",
    "style-loader": "0.13.1",
    "stylefmt": "^5.3.2",
    "stylelint": "^7.10.1",
    "stylelint-config-standard": "^16.0.0",
    "url-loader": "0.5.7",
    "webpack": "1.14.0",
    "webpack-dev-server": "1.16.2",
    "webpack-manifest-plugin": "1.1.0",
    "whatwg-fetch": "^2.0.3"
  },
  "scripts": {
    "start": "node scripts/start.js",
    "build": "node scripts/build.js",
    "test": "node scripts/test.js --env=jsdom",
    "test-coverage": "npm test -- --coverage",
    "precommit": "lint-staged",
    "stylefmt": "stylefmt --recursive src/postcss/**/*.css",
    "prettier": "prettier --write --single-quote --trailing-comma=all \"src/**/*.js\"",
    "format": "npm run stylefmt ; npm run prettier"
  },
  "jest": {
    "collectCoverageFrom": [
      "src/**/*.{js,jsx}"
    ],
    "setupFiles": [
      "<rootDir>/config/polyfills.js"
    ],
    "testPathIgnorePatterns": [
      "<rootDir>[/\\\\](build|docs|node_modules|scripts)[/\\\\]"
    ],
    "testEnvironment": "node",
    "testURL": "http://localhost",
    "transform": {
      "^.+\\.(js|jsx)$": "<rootDir>/node_modules/babel-jest",
      "^.+\\.css$": "<rootDir>/config/jest/cssTransform.js",
      "^(?!.*\\.(js|jsx|css|json)$)": "<rootDir>/config/jest/fileTransform.js"
    },
    "transformIgnorePatterns": [
      "[/\\\\]node_modules[/\\\\].+\\.(js|jsx)$"
    ],
    "moduleNameMapper": {
      "^react-native$": "react-native-web"
    }
  },
  "babel": {
    "presets": [
      "react-app"
    ]
  },
  "eslintConfig": {
    "extends": "react-app"
  },
  "lint-staged": {
    "src/**/*.js": [
      "npm run prettier",
      "git add"
    ]
  },
  "stylelint": {
    "extends": "stylelint-config-standard",
    "rules": {
      "indentation": [
        "tab",
        {
          "except": [
            "value"
          ]
        }
      ],
      "at-rule-empty-line-before": [
        "always",
        {
          "ignore": [
            "blockless-after-same-name-blockless",
            "blockless-group"
          ]
        }
      ],
      "declaration-empty-line-before": [
        "never"
      ],
      "rule-non-nested-empty-line-before": [
        "always-multi-line",
        {
          "except": [
            "after-single-line-comment"
          ],
          "ignore": [
            "after-comment"
          ]
        }
      ],
      "max-empty-lines": 2
    }
  }
}
